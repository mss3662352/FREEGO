<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc classpath:org/springframework/web/servlet/config/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!-- 	<beans:bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/> -->

	<!-- ajax -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <beans:property name="order" value="0"/>
	</beans:bean>
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

	<context:component-scan base-package="com.java.HSmart" />
	
	<!-- fileUpload --> 
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="defaultEncoding" value="UTF-8"/>
        <beans:property name="maxUploadSize" value="104857600"/> <!-- 100MB -->
        <beans:property name="maxInMemorySize" value="1048576"/> <!-- 1MB -->
    </beans:bean>

	<!-- 양방향 암호화의 서비스 클래스 빈 등록 -->
	<beans:bean id="AES256Util" class="com.java.HSmart.util.AES256Util"/>
	
		<!-- 테스트 환경에서 가짜 servletContext 빈 생성을 위한 -->
	<beans:bean class="org.springframework.mock.web.MockServletContext"/>
</beans:beans>
